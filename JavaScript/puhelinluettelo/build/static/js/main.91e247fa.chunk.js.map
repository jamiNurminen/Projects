{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","logger","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","remove","delete","Person","props","name","number","onClick","handleDelete","Persons","persons","map","person","PersonForm","onSubmit","addInfo","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Heading","heading","Notification","message","status","className","App","useState","setPersons","setNewName","setNewNumber","succesMessage","setSuccesMessage","errorMessage","setErrorMessage","useEffect","personService","initialPersons","event","preventDefault","nameObject","isTaken","indexOf","window","confirm","returnedPerson","setTimeout","concat","catch","error","target","removedPerson","find","p","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.91e247fa.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst logger = {\n    getAll,\n    create,\n    update,\n    remove\n}\n\nexport default logger","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ succesMessage, setSuccesMessage] = useState(null)\n  const [ errorMessage, setErrorMessage] = useState(null)\n\n  const handleDelete = id => {\n    const removedPerson = persons.find(p => p.id === id)\n    const result = window.confirm(`Delete ${removedPerson.name} ?`)\n    if (result) {\n      personService\n        .remove(removedPerson.id)\n        .then(response => {\n          setPersons(persons.filter(person => person.id !== removedPerson.id))\n      setSuccesMessage(`Deleted ${removedPerson.name}`)\n      setTimeout(() => {\n        setSuccesMessage(null)\n      }, 2000)\n        })\n        .catch(error => {\n          setPersons(persons.filter(person => person.id !== removedPerson.id))\n          setErrorMessage(`Information of ${removedPerson.name} has already been removed from server`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 2500)\n        })\n    }\n  }\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const addInfo = (event) => {\n    event.preventDefault()\n    if (newName === '') return\n    const nameObject = {\n      name: newName,\n      number: newNumber,\n    }\n    const names = persons.map(person => person.name)\n    const isTaken = names.indexOf(nameObject.name)\n    if (isTaken !== -1) {\n      const result = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n      if(result) {\n        const id = persons[isTaken].id\n        personService\n          .update(id, nameObject)\n          .then(returnedPerson => {\n            setSuccesMessage(\n              `Changed ${nameObject.name} number to ${nameObject.number}`\n            )\n            setTimeout(() => {\n              setSuccesMessage(null)\n            }, 2000)\n          })\n        personService\n          .getAll()\n          .then(initialPersons => {\n            setPersons(initialPersons)\n          })\n      }\n      setNewName('')\n      setNewNumber('')\n      return \n    }\n\n    personService\n      .create(nameObject)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setSuccesMessage(`Added ${returnedPerson.name}`)\n        setTimeout(() => {\n          setSuccesMessage(null)\n        },2500)\n        setNewName('')\n        setNewNumber('')\n      })\n      .catch(error => {\n        setErrorMessage(error.response.data.error)\n        setTimeout(() => {\n          setErrorMessage(null)\n        },2500)\n      })\n\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  return (\n    <div>\n      <Heading heading='Phonebook' />\n      <Notification message={succesMessage} status=\"succes\" />\n      <Notification message={errorMessage} status=\"error\" />\n      <PersonForm \n      addInfo={addInfo}\n      handleNameChange={handleNameChange}\n      handleNumberChange={handleNumberChange}\n      newName={newName}\n      newNumber={newNumber}/>\n      <Heading heading='Numbers' />\n      <Persons persons={persons} handleDelete={handleDelete} />\n    </div>\n  )\n\n}\n\nconst Person = (props) => {\n  return (\n  <div>\n    {props.name} {props.number}\n    <button onClick={props.handleDelete}>delete</button>\n  </div>\n  )\n}\n\nconst Persons = (props) => {\n\n  return (\n    <div>\n      {props.persons.map(person =>\n      <Person\n        key={person.name}\n        name={person.name}\n        number={person.number}\n        handleDelete={() => props.handleDelete(person.id)} />\n      )}\n    </div>\n  )\n}\n\nconst PersonForm = (props) => {\n\n  return (\n    <form onSubmit={props.addInfo}>\n        <div>Name:<input\n          value={props.newName}\n          onChange={props.handleNameChange}\n        /></div>\n        <div>Number: <input\n          value={props.newNumber}\n          onChange={props.handleNumberChange}\n        /></div>\n        <button type=\"submit\">save</button>\n      </form>\n  )\n}\n\nconst Heading = (props) => {\n\n  return (\n    <div>\n      <h2>{props.heading}</h2>\n    </div>\n  )\n}\n\nconst Notification = ({ message, status }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={status}>\n      {message}\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)\n"],"sourceRoot":""}